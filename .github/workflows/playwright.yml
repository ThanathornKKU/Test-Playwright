# ไฟล์: .github/workflows/playwright.yml
# GitHub Actions สำหรับรัน Playwright tests อัตโนมัติ

name: 🎭 Playwright Tests

# กำหนดเมื่อไหร่ให้รัน workflow
on:
  # รันเมื่อมี push ไปยัง main branch
  push:
    branches: [ main, master ]
  
  # รันเมื่อมี pull request ไปยัง main branch
  pull_request:
    branches: [ main, master ]
  
  # อนุญาตให้รันด้วยตนเองใน GitHub UI
  workflow_dispatch:

# กำหนด jobs
jobs:
  test:
    # ใช้ Ubuntu runner ล่าสุด
    runs-on: ubuntu-latest
    
    # กำหนด timeout เป็น 30 นาที
    timeout-minutes: 30
    
    steps:
      # 1. Checkout source code
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      # 2. Setup Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. Install dependencies
      - name: 📦 Install dependencies
        run: npm ci
      
      # 4. Install Playwright browsers
      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps
      
      # 5. Start HTTP server ใน background
      - name: 🌐 Start HTTP Server
        run: |
          # เริ่ม server ใน background
          npx http-server . -p 8080 -c-1 --silent &
          # รอให้ server พร้อม (รอ 10 วินาที)
          sleep 10
          # ตรวจสอบว่า server ทำงาน
          curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:8080 || exit 1
          echo "✅ Server is ready at http://localhost:8080"
      
      # 6. Run Playwright tests
      - name: 🧪 Run Playwright Tests
        run: npx playwright test
        env:
          CI: true
      
      # 7. Upload test report หาก tests ล้มเหลว
      - name: 📊 Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      # 8. Upload test results หาก tests ล้มเหลว
      - name: 📋 Upload Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: test-results/
          retention-days: 7
      
      # 9. Comment ผลลัพธ์ใน PR (เฉพาะ pull request)
      - name: 💬 Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## 🎭 Playwright Test Results\n\n';
            
            // ตรวจสอบสถานะของ tests
            const success = '${{ job.status }}' === 'success';
            
            if (success) {
              comment += '✅ **All tests passed!** 🎉\n\n';
              comment += '- ✓ หน้าล็อกอิน tests\n';
              comment += '- ✓ ทดสอบบน multiple browsers\n';
              comment += '- ✓ Form validation tests\n\n';
            } else {
              comment += '❌ **Some tests failed** 😞\n\n';
              comment += '🔍 [Check detailed logs here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n';
              comment += '📊 [Download test report artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n';
            }
            
            comment += '---\n';
            comment += '🤖 *Automated comment by GitHub Actions*\n';
            comment += `📅 *Run at: ${new Date().toLocaleString('th-TH')}*\n`;
            comment += `🔗 *Commit: [\`${context.sha.substring(0, 7)}\`](https://github.com/${{ github.repository }}/commit/${context.sha})*`;
            
            // Create comment ใน PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Job สำหรับ security audit
  security:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout source code
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      # 2. Setup Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. Install dependencies
      - name: 📦 Install dependencies
        run: npm ci
      
      # 4. Run security audit
      - name: 🔒 Security Audit
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level moderate || echo "⚠️ Found some security issues"
          
          echo "📦 Checking for outdated packages..."
          npm outdated || echo "📅 Some packages are outdated"
        continue-on-error: true

  # Job สำหรับ deploy (รันเฉพาะเมื่อ push ไปยัง main และ tests ผ่าน)
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
      # 1. Checkout source code
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      # 2. Setup Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. Install dependencies
      - name: 📦 Install dependencies
        run: npm ci
      
      # 4. Install Playwright browsers
      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps
      
      # 5. Start server และ run tests เพื่อสร้าง report
      - name: 🧪 Generate Test Report
        run: |
          npx http-server . -p 8080 -c-1 --silent &
          sleep 10
          npx playwright test || true  # ไม่หยุดถ้า tests fail
        env:
          CI: true
      
      # 6. Deploy to GitHub Pages
      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          exclude_assets: |
            node_modules
            .github
            test-results
            .gitignore
            package*.json
            playwright.config.ts
            tests
          destination_dir: ./
          
      # 7. Deploy test report
      - name: 📊 Deploy Test Report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          destination_dir: test-report
          keep_files: true